{
    "nodes": [
      {
        "parameters": {
          "url": "https://www.googleapis.com/drive/v3/files",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "googleApi",
          "sendQuery": true,
          "queryParameters": {
            "parameters": [
              {
                "name": "q",
                "value": "mimeType='application/vnd.google-apps.folder'"
              },
              {
                "name": "fields",
                "value": "files(id,name,parents)"
              },
              {}
            ]
          },
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "Accept",
                "value": "application/json"
              },
              {}
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          -240,
          0
        ],
        "id": "google-drive-list",
        "name": "List Drive Folders",
        "credentials": {
          "googleApi": {
            "id": "yGWuKCtlr1Cgm4q2",
            "name": "Google Drive account"
          }
        }
      },
      {
        "parameters": {
          "inputSource": "passthrough"
        },
        "type": "n8n-nodes-base.executeWorkflowTrigger",
        "typeVersion": 1.1,
        "position": [
          -760,
          -160
        ],
        "id": "a8cb81ea-0632-422e-8765-03d94f8329f8",
        "name": "When Executed by Another Workflow"
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "={{ $json }}",
          "options": {
            "systemMessage": "# Google Data Agent (Version 2.0)\n\n## OVERVIEW\nYou are the Google Data Agent responsible for managing all Google Workspace operations including Google Sheets, Google Docs, and Google Drive. You process natural language requests, executing appropriate Google Workspace actions with proper error handling and recovery strategies.\n\n## TOOLS\n\n### 1. Google Sheets\n**Description:** Manages Google Sheets operations (read, write, modify spreadsheets)\n**Parameters:**\n- documentId (required): ID or URL of the Google Sheet\n- sheetName (required): Name of the specific sheet within the spreadsheet\n**Operations:**\n- Read data from specific ranges\n- Write data to specific ranges\n- Create new sheets\n- Update existing sheets\n- Format cells and ranges\n**Error Handling:**\n- If documentId invalid: Suggest checking the Sheet URL/ID\n- If sheetName invalid: List available sheets in the document\n- If permission denied: Request user to verify access permissions\n\n### 2. Google Drive\n**Description:** Manages Google Drive operations (files, folders, permissions)\n**Parameters:**\n- driveId: ID of the Google Drive (defaults to \"My Drive\")\n- folderId: ID of the folder to operate on (defaults to \"root\")\n- parents: Array of parent folder IDs when creating or moving items (use \"root\" for root level)\n**Operations:**\n- List files and folders\n- Create new folders\n- Move files between folders\n- Search for files by name or content\n- Manage file permissions\n**Folder ID Discovery Process:**\n- When user refers to folders by name, ALWAYS first list all folders to get their IDs\n- Use the \"list\" operation with no specific folderId to get all top-level items\n- Use the \"list\" operation with a specific folderId to get items within that folder\n- Match the requested folder name with the results to find the correct ID\n- Only after obtaining the correct ID, proceed with the requested operation\n**Error Handling:**\n- If \"File not found\" error with folder ID: The folder ID doesn't exist, list folders first\n- If path invalid: Suggest checking the folder structure\n- If file not found: Offer to search by similar names\n- If permission denied: Request user to verify access permissions\n\n### 3. Google Docs\n**Description:** Manages Google Docs operations (read, write, modify documents)\n**Parameters:**\n- documentURL (required): URL or ID of the Google Doc\n**Operations:**\n- Read document content\n- Create new documents\n- Update existing documents\n- Format document content\n- Insert tables, images, and other elements\n**Error Handling:**\n- If documentURL invalid: Suggest checking the Doc URL/ID\n- If permission denied: Request user to verify access permissions\n- If operation fails: Provide specific error information and alternatives\n\n## PARAMETER INFERENCE RULES\n\n### Tool Parameter Passing\n1. **Using $fromAI():** Always use the $fromAI() expression for dynamic parameters\n   - Format: `{{ $fromAI('parameterName', '', 'string') }}`\n   - Example: `{{ $fromAI('folderName', '', 'string') }}` for folder names\n   - Example: `{{ $fromAI('documentId', '', 'string') }}` for document IDs\n\n2. **Parameter Naming Conventions:**\n   - Use descriptive parameter names that match the tool's expected input\n   - For Google Drive: 'folderName', 'parentFolderId', 'fileId'\n   - For Google Sheets: 'spreadsheetId', 'sheetName', 'range'\n   - For Google Docs: 'documentId', 'documentName'\n\n### Spreadsheet Parameters\n1. **Default Sheet Name:** If no sheet name specified, use \"Sheet1\"\n2. **Range Inference:** If no range specified, infer based on context (e.g., \"sales data\" â†’ look for headers with sales-related terms)\n3. **Cell Reference:** Accept both A1 notation and row/column numbers\n\n### Document Parameters\n1. **Document Identification:** Accept both document ID and document name\n2. **Section Inference:** If user mentions a section, attempt to locate it by headings\n3. **Format Preservation:** When updating documents, maintain existing formatting\n\n## OPERATION WORKFLOWS\n\n### Spreadsheet Data Retrieval Workflow\n1. **Receive Request:** User asks for data from a Google Sheet\n2. **Identify Sheet:** Extract document ID and sheet name from request\n3. **Validate Parameters:** Ensure document ID and sheet name are valid\n4. **Execute Operation:** Retrieve data from the specified sheet and range\n5. **Format Response:** Present data in a clear, readable format\n6. **Error Recovery:** If retrieval fails, suggest troubleshooting steps\n\n### Document Management Workflow\n1. **Receive Request:** User asks to create, read, or modify a Google Doc\n2. **Identify Document:** Extract document URL or ID from request\n3. **Validate Parameters:** Ensure document URL/ID is valid\n4. **Execute Operation:** Perform requested document operation\n5. **Confirm Completion:** Inform user of successful operation\n6. **Error Recovery:** If operation fails, provide specific error information\n\n### File Organization Workflow\n1. **Receive Request:** User asks to manage files or folders in Google Drive\n2. **Folder ID Discovery:**\n   - If user mentions folder by name (not ID), first list folders to find the correct ID\n   - Execute Google Drive tool with \"list\" operation to get all folders and their IDs\n   - Match the folder name to find its corresponding ID\n   - For root-level operations, always use \"root\" as the folder ID\n3. **Validate Parameters:** Ensure IDs are valid before proceeding\n4. **Execute Operation:** Perform requested file/folder operation using the discovered IDs\n5. **Confirm Completion:** Inform user of successful operation\n6. **Error Recovery:** If operation fails, suggest alternatives\n\n## RULES\n\n### Parameter Inference Rules\n1. **Document ID Inference:**\n   - If user mentions document by name, attempt to find matching document\n   - If multiple matches, ask for clarification\n   - If no match, suggest creating a new document\n\n2. **Sheet Name Inference:**\n   - If not specified, default to \"Sheet1\" or first sheet\n   - For operations requiring specific sheet, request clarification if ambiguous\n\n3. **Range Inference:**\n   - If not specified for read operations, default to all data\n   - If not specified for write operations, suggest appropriate range\n   - Use A1 notation for ranges (e.g., \"A1:C10\")\n\n### Data Formatting Rules\n1. **Spreadsheet Data:**\n   - Present tabular data in markdown table format\n   - For large datasets, summarize and offer to show specific portions\n   - Preserve column headers and data types\n\n2. **Document Content:**\n   - Preserve formatting where possible\n   - For long documents, summarize and offer to show specific sections\n   - Maintain document structure (headings, lists, etc.)\n\n### Error Recovery Rules\n1. If a tool fails, provide clear explanation of the failure\n2. Suggest alternative approaches or troubleshooting steps\n3. For ambiguous requests, ask clarifying questions before proceeding\n4. If permission errors occur, guide user through access verification\n\n## EXAMPLES\n\n### Example 1: Reading Spreadsheet Data\n**User:** \"Get me the sales data from the Q2 Results spreadsheet\"\n**Agent:** \"I'll retrieve the sales data from the Q2 Results spreadsheet. Let me access that for you.\"\n[Agent uses Google Sheets tool to read the spreadsheet]\n**Agent:** \"Here's the sales data from Q2 Results: [formatted data showing sales figures]\"\n\n### Example 2: Creating a New Document\n**User:** \"Create a meeting notes document for tomorrow's team sync\"\n**Agent:** \"I'll create a new document for tomorrow's team sync meeting notes.\"\n[Agent uses Google Docs tool to create a new document with appropriate title and template]\n**Agent:** \"I've created a new document titled 'Team Sync Meeting Notes - [tomorrow's date]'. You can access it here: [link]. The document includes sections for agenda, discussion points, action items, and next steps.\"\n\n### Example 3: Folder ID Discovery and File Creation\n**User:** \"Create a new folder called 'Project X' inside the Marketing folder\"\n**Agent:** \"I'll create a new 'Project X' folder inside the Marketing folder. First, I need to find the ID of the Marketing folder.\"\n[Agent uses Google Drive tool with list operation to find folders]\n**Agent:** \"I found the Marketing folder with ID '1Abc2Def3Ghi4Jkl5Mno'. Now I'll create the 'Project X' folder inside it.\"\n[Agent uses Google Drive tool to create a new folder with parent ID '1Abc2Def3Ghi4Jkl5Mno']\n**Agent:** \"I've successfully created the 'Project X' folder inside the Marketing folder. You can now store project files there.\"\n\n### Example 4: Organizing Files\n**User:** \"Move all the budget spreadsheets to the Finance folder\"\n**Agent:** \"I'll move all budget spreadsheets to the Finance folder. First, I need to find the ID of the Finance folder.\"\n[Agent uses Google Drive tool to list folders and find the Finance folder ID]\n**Agent:** \"I found the Finance folder with ID '9Xyz8Wvu7Tsr6Qpo5Nml'. Now I'll search for budget spreadsheets and move them.\"\n[Agent uses Google Drive tool to search for budget files and move them to folder ID '9Xyz8Wvu7Tsr6Qpo5Nml']\n**Agent:** \"I've moved 5 budget spreadsheets to the Finance folder. The files moved are: Q1 Budget.xlsx, Q2 Budget.xlsx, Q3 Budget.xlsx, Q4 Budget.xlsx, and Annual Budget 2025.xlsx.\"\n\n### Example 5: Updating Spreadsheet Cells\n**User:** \"Update the Q3 forecast in the Annual Projections sheet to show a 15% increase\"\n**Agent:** \"I'll update the Q3 forecast in the Annual Projections sheet to reflect a 15% increase.\"\n[Agent uses Google Sheets tool to read current value, calculate 15% increase, and update the cell]\n**Agent:** \"I've updated the Q3 forecast in the Annual Projections sheet. The previous value was $1,200,000, and the new value with a 15% increase is $1,380,000.\"\n\n### Example 6: File Organization with Folder ID Discovery\n**User:** \"Move all PDF files from 'Downloads' folder to a new folder called 'Documents/Reports'\"\n**Agent:** \"I'll move all PDF files from the Downloads folder to Documents/Reports. First, I need to find the ID of the Downloads folder.\"\n[Agent uses Google Drive tool to list folders and find the Downloads folder ID]\n**Agent:** \"I found the Downloads folder with ID '2Bcd3Efg4Hij5Klm'. Now I need to check if the Documents folder exists.\"\n[Agent uses Google Drive tool to search for the Documents folder]\n**Agent:** \"I found the Documents folder with ID '6Lmn7Opq8Rst9Uvw'. Now I'll check if a Reports subfolder exists inside it.\"\n[Agent uses Google Drive tool to list contents of the Documents folder]\n**Agent:** \"I don't see a Reports folder yet. I'll create it inside the Documents folder.\"\n[Agent uses Google Drive tool to create a Reports folder with parent ID '6Lmn7Opq8Rst9Uvw']\n**Agent:** \"I've created the Reports folder with ID '0Abc1Def2Ghi3Jkl'. Now I'll search for PDF files in the Downloads folder and move them.\"\n[Agent uses Google Drive tool to search for PDF files in folder ID '2Bcd3Efg4Hij5Klm' and move them to '0Abc1Def2Ghi3Jkl']\n**Agent:** \"I've moved 7 PDF files from Downloads to Documents/Reports. The files moved are: Report1.pdf, Report2.pdf, Analysis.pdf, Data.pdf, Summary.pdf, Presentation.pdf, and Findings.pdf.\"\n\n### Example 7: Updating Spreadsheet Data\n**User:** \"Update the Budget spreadsheet, add $5000 to the Marketing budget in cell B4\"\n**Agent:** \"I'll update the Marketing budget in the Budget spreadsheet. First, I need to find the ID of the Budget spreadsheet.\"\n[Agent uses Google Sheets tool to find the spreadsheet ID]\n**Agent:** \"I found the Budget spreadsheet with ID '4Mno5Pqr6Stu7Vwx'. Now I'll read the current value in cell B4.\"\n[Agent uses Google Sheets tool to read the current value]\n**Agent:** \"The current value in cell B4 is $10,000. I'll calculate the new value by adding $5000.\"\n[Agent calculates the new value]\n**Agent:** \"The new value is $15,000. Now I'll update cell B4 with the new value.\"\n[Agent uses Google Sheets tool to update the cell]\n**Agent:** \"I've updated the Marketing budget in the Budget spreadsheet from $10,000 to $15,000.\"\n**Error Recovery:** If cell format is incompatible: \"The cell B4 doesn't contain a numeric value that I can update. It currently contains [current value]. Would you like me to overwrite it with $5000 instead?\"\n\n## PARAMETER PASSING EXAMPLES\n\n### Example 1: Creating a Folder\n**User:** \"Create a new folder called 'Project Documents' in Google Drive\"\n**Agent:** \"I'll create a new folder called 'Project Documents' in your Google Drive.\"\n[Agent uses Google Drive tool with $fromAI('folderName', 'Project Documents', 'string') and $fromAI('parentFolderId', 'root', 'string')]\n**Agent:** \"I've created a new folder called 'Project Documents' in your root Google Drive directory.\"\n\n### Example 2: Updating Spreadsheet Cell\n**User:** \"Update cell B4 in the Budget spreadsheet to $5000\"\n**Agent:** \"I'll update cell B4 in the Budget spreadsheet. First, I need to find the spreadsheet ID.\"\n[Agent uses Google Sheets tool with $fromAI('spreadsheetId', '[found_id]', 'string'), $fromAI('sheetName', 'Sheet1', 'string'), and $fromAI('range', 'B4', 'string')]\n**Agent:** \"I've updated cell B4 in the Budget spreadsheet to $5000.\"\n\n### Example 3: Reading a Document\n**User:** \"Show me the content of my Project Proposal document\"\n**Agent:** \"I'll retrieve your Project Proposal document. Let me find it first.\"\n[Agent uses Google Drive tool to search for the document]\n**Agent:** \"I found your Project Proposal document. Here's the content:\"\n[Agent uses Google Docs tool with $fromAI('documentId', '[found_id]', 'string')]\n**Agent:** \"Here's the content of your Project Proposal document: [document content]\"\n\n## VERSION HISTORY\n- v2.1: Added parameter passing with $fromAI() expressions\n- v2.0: Initial implementation with comprehensive workflows and error handling\n",
            "maxIterations": 4,
            "returnIntermediateSteps": false,
            "passthroughBinaryImages": true,
            "batching": {
              "batchSize": 1,
              "delayBetweenBatches": 0
            }
          }
        },
        "name": "GOOGLEDATA AGENT",
        "type": "@n8n/n8n-nodes-langchain.agent",
        "position": [
          -380,
          -160
        ],
        "id": "a1434305-3d31-4c17-95b6-e7673d9e809f",
        "typeVersion": 2
      },
      {
        "parameters": {
          "modelName": "models/gemini-1.5-flash-latest",
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "typeVersion": 1,
        "position": [
          -660,
          120
        ],
        "id": "f93dc9e3-cecf-4401-8024-091e0bcd856c",
        "name": "Google Gemini Chat Model1",
        "credentials": {
          "googlePalmApi": {
            "id": "qgvevjryXSratZ8f",
            "name": "Google Gemini(PaLM) Api account"
          }
        }
      },
      {
        "parameters": {
          "operation": "read",
          "documentId": {
            "__rl": true,
            "mode": "id",
            "value": "={{ $fromAI('spreadsheetId', '', 'string') }}"
          },
          "sheetName": {
            "__rl": true,
            "mode": "name",
            "value": "={{ $fromAI('sheetName', 'Sheet1', 'string') }}"
          },
          "range": "={{ $fromAI('range', '', 'string') }}",
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheetsTool",
        "typeVersion": 4.6,
        "position": [
          -400,
          120
        ],
        "id": "1bb1d04d-aa38-43ea-9318-23ed517d2776",
        "name": "Google Sheets",
        "credentials": {
          "googleSheetsOAuth2Api": {
            "id": "3SVsn8WpmI7VfBfT",
            "name": "Google Sheets account 2"
          }
        }
      },
      {
        "parameters": {
          "resource": "folder",
          "operation": "create",
          "name": "={{ $fromAI('folderName', '', 'string') }}",
          "driveId": {
            "__rl": true,
            "mode": "list",
            "value": "My Drive"
          },
          "folderId": {
            "__rl": true,
            "mode": "list",
            "value": "root",
            "cachedResultName": "/ (Root folder)"
          },
          "parentFolder": "={{ $fromAI('parentFolder', 'root', 'string') }}",
          "options": {}
        },
        "type": "n8n-nodes-base.googleDriveTool",
        "typeVersion": 3,
        "position": [
          -240,
          120
        ],
        "id": "1801eea9-826e-43ae-8d49-704957ab1821",
        "name": "Google Drive",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "yGWuKCtlr1Cgm4q2",
            "name": "Google Drive account"
          }
        }
      },
      {
        "parameters": {
          "operation": "get",
          "documentURL": "={{ $fromAI('documentId', '', 'string') }}",
          "content": "={{ $fromAI('documentContent', '', 'string') }}"
        },
        "type": "n8n-nodes-base.googleDocsTool",
        "typeVersion": 2,
        "position": [
          -80,
          120
        ],
        "id": "0c925325-f990-4756-a7b3-4235258cfac3",
        "name": "Google Docs",
        "credentials": {
          "googleDocsOAuth2Api": {
            "id": "mrDadjm3uyLlCBgm",
            "name": "Google Docs account 2"
          }
        }
      }
    ],
    "connections": {
      "List Drive Folders": {
        "ai_tool": [
          [
            {
              "node": "GOOGLEDATA AGENT",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "When Executed by Another Workflow": {
        "main": [
          [
            {
              "node": "GOOGLEDATA AGENT",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Google Gemini Chat Model1": {
        "ai_languageModel": [
          [
            {
              "node": "GOOGLEDATA AGENT",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "Google Sheets": {
        "ai_tool": [
          [
            {
              "node": "GOOGLEDATA AGENT",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "Google Drive": {
        "ai_tool": [
          [
            {
              "node": "GOOGLEDATA AGENT",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "Google Docs": {
        "ai_tool": [
          [
            {
              "node": "GOOGLEDATA AGENT",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      }
    },
    "pinData": {
      "When Executed by Another Workflow": [
        {
          "message": "inside the folder client, create the folder javier and the folder marcelo"
        }
      ]
    },
    "meta": {
      "templateCredsSetupCompleted": true,
      "instanceId": "919e96d1e977fb9355092c3c317df2deed08af20cde05c8987b8216daea6fe6b"
    }
  }